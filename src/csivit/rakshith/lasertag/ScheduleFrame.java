package csivit.rakshith.lasertag;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rakshith
 */
public class ScheduleFrame extends javax.swing.JFrame {

    private final DefaultTableModel model;
    private final Random random = new Random();
    
    public ScheduleFrame() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        refreshView();
    }

    protected void openForm(JFrame jFrame) {
        JDialog frame = new JDialog(this, jFrame.getTitle(), true);
        frame.getContentPane().add(jFrame.getContentPane());
        frame.pack();
        frame.setVisible(true);
    }
    
    private void refreshView() {
        for(int i = 0; i < Data.Friday.length; i++) {
            Team[] slots = Data.Friday[i];
            String content = "";
            for(Team team : slots) {
                if(team != null)
                    content += team.getTeamNumber() + ", ";
            }
            model.setValueAt(content, i, 1);
        }
        for(int i = 0; i < Data.Saturday.length; i++) {
            Team[] slots = Data.Saturday[i];
            String content = "";
            for(Team team : slots) {
                if(team != null)
                    content += team.getTeamNumber() + ", ";
            }
            model.setValueAt(content, i, 2);
        }
        for(int i = 0; i < Data.Sunday.length; i++) {
            Team[] slots = Data.Sunday[i];
            String content = "";
            for(Team team : slots) {
                if(team != null)
                    content += team.getTeamNumber() + ", ";
            }
            model.setValueAt(content, i, 3);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12 - 1", null, null, null},
                {"1 - 2", null, null, null},
                {"2 - 3", null, null, null},
                {"3 - 4", null, null, null},
                {"4 - 5", null, null, null},
                {"5 - 6", null, null, null},
                {"6 - 7", null, null, null},
                {"7 - 8", null, null, null}
            },
            new String [] {
                "", "Friday", "Saturday", "Sunday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setRowHeight(32);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButton1.setText("<html>Form <b>the</b> schedule</html>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<html>View <b>the</b> schedule</html>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Form THE schedule
        /*
        Populate the cell here
         */
        // allocate slot, then call refreshView()
        switch (jTable1.getSelectedColumn()) {
            case 1:
            {
                for(Team team : Data.Friday[jTable1.getSelectedRow()]) {
                    if(team != null)
                        Data.UnassignedTeams.add(team);
                }
                int i = 0;
                // TODO no girls in the last 2 slots
                while(i < 14 && !Data.UnassignedTeams.isEmpty()) {
                    int teamNumber = random.nextInt(Data.UnassignedTeams.size());
                    if(jTable1.getSelectedRow() > 6) {
                        while(Data.UnassignedTeams.get(teamNumber).hasGirls()) {
                            teamNumber = random.nextInt(Data.UnassignedTeams.size());
                        }
                    }
                    Team team = Data.UnassignedTeams.get(teamNumber);
                    Data.Friday[jTable1.getSelectedRow()][i] = team;
                    Data.UnassignedTeams.remove(team);
                    i++;
                }
                break;
            }
            case 2:
            {
                for(Team team : Data.Saturday[jTable1.getSelectedRow()]) {
                    if(team != null)
                        Data.UnassignedTeams.add(team);
                }
                int i = 0;
                // TODO no girls in the last 2 slots
                while(i < 14 && !Data.UnassignedTeams.isEmpty()) {
                    int teamNumber = random.nextInt(Data.UnassignedTeams.size());
                    if(jTable1.getSelectedRow() > 6) {
                        while(Data.UnassignedTeams.get(teamNumber).hasGirls()) {
                            teamNumber = random.nextInt(Data.UnassignedTeams.size());
                        }
                    }
                    Team team = Data.UnassignedTeams.get(teamNumber);
                    Data.Saturday[jTable1.getSelectedRow()][i] = team;
                    Data.UnassignedTeams.remove(team);
                    i++;
                }
                break;
            }
            case 3:
            {
                for(Team team : Data.Sunday[jTable1.getSelectedRow()]) {
                    if(team != null)
                        Data.UnassignedTeams.add(team);
                }
                int i = 0;
                // TODO no girls in the last 2 slots
                while(i < 14 && !Data.UnassignedTeams.isEmpty()) {
                    int teamNumber = random.nextInt(Data.UnassignedTeams.size());
                    if(jTable1.getSelectedRow() > 6) {
                        while(Data.UnassignedTeams.get(teamNumber).hasGirls()) {
                            teamNumber = random.nextInt(Data.UnassignedTeams.size());
                        }
                    }
                    Team team = Data.UnassignedTeams.get(teamNumber);
                    Data.Sunday[jTable1.getSelectedRow()][i] = team;
                    Data.UnassignedTeams.remove(team);
                    i++;
                }
                break;
            }
            default:
                break;
        }
        refreshView();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // view the schedule
        switch(jTable1.getSelectedColumn()) {
            case 1:
            {
                System.out.println(jTable1.getSelectedRow());
                ViewTeamsFrame viewTeamsFrame = new ViewTeamsFrame(Arrays.asList(Data.Friday[jTable1.getSelectedRow()]));
                openForm(viewTeamsFrame);
            }
            case 2:
            {
                
            }
            case 3:
            {
                
            }
            default:
                break;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
